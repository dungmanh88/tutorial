---
- name: Install mysql-repo
  yum:
    name: https://dev.mysql.com/get/mysql57-community-release-el7-11.noarch.rpm
    state: present

- name: Disable mysql57
  command: yum-config-manager --disable mysql57-community

- name: Enable mysql56
  command: yum-config-manager --enable mysql56-community

- name: Install mysql
  yum:
    name: "{{ item }}"
    enablerepo: mysql56-community
    state: present
  with_items: "{{ mysql_packages }}"
  register: mysql_install_packages
  notify:
    - restart mysql

- name: Check if MySQL packages were installed.
  set_fact:
    mysql_install_packages: "{{ (mysql_install_packages is defined and mysql_install_packages.changed) }}"

- name: Ensure MySQL is started and enabled on boot.
  service: "name={{ mysql_daemon }} state=started enabled={{ mysql_enabled_on_startup }}"
  when: mysql_install_packages

- name: Install the MySQL-python through pip
  pip:
    name: "{{ item }}"
#    state: forcereinstall
  with_items:
    - pip
    - MySQL-python

# 'localhost' needs to be the last item for idempotency, see
# http://ansible.cc/docs/modules.html#mysql-user
- name: Change root user password on first run
  mysql_user: login_user=root
              login_password={{ mysql_root_password }}
              check_implicit_admin=yes
              name=root
              password={{ mysql_root_password }}
              priv=*.*:ALL,GRANT
              host={{ item }}
  with_items:
    - "{{ ansible_hostname }}"
    - 127.0.0.1
    - ::1
    - localhost
  when: mysql_install_packages

- name: delete anonymous MySQL server user for {{ ansible_hostname }}
  mysql_user: user="" host="{{ ansible_hostname }}" state="absent"
              login_user=root login_password={{ mysql_root_password }} check_implicit_admin=yes
  when: mysql_install_packages

- name: delete anonymous MySQL server user for localhost
  mysql_user: user="" state="absent"
              login_user=root login_password={{ mysql_root_password }} check_implicit_admin=yes
  when: mysql_install_packages

- name: remove the MySQL test database
  mysql_db: name=test state=absent
            login_user=root login_password={{ mysql_root_password }}
  when: mysql_install_packages

- name: Ensure MySQL databases are present.
  mysql_db:
    name: "{{ item.name }}"
    collation: "{{ item.collation | default('utf8_general_ci') }}"
    encoding: "{{ item.encoding | default('utf8') }}"
    state: "{{ item.state | default('present') }}"
    login_user: root
    login_password: "{{ mysql_root_password }}"
  with_items: "{{ mysql_databases }}"
  when: mysql_install_packages

- name: Ensure MySQL users are present.
  mysql_user:
    name: "{{ item.name }}"
    host: "{{ item.host | default('localhost') }}"
    password: "{{ item.password }}"
    priv: "{{ item.priv | default('*.*:USAGE') }}"
    state: "{{ item.state | default('present') }}"
    append_privs: "{{ item.append_privs | default('no') }}"
    encrypted: "{{ item.encrypted | default('no') }}"
    login_user: root
    login_password: "{{ mysql_root_password }}"
  with_items: "{{ mysql_users }}"
  when: mysql_install_packages

# Has to be after the root password assignment, for idempotency.
- name: Copy .my.cnf file with root password credentials.
  template:
    src: "root-my.cnf.j2"
    dest: "{{ mysql_root_home }}/.my.cnf"
    owner: root
    group: root
    mode: 0600
  when: mysql_install_packages
